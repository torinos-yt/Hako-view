//@author: vux
//@help: template for texture fx
//@tags: texture
//@credits: 

Texture2D texture2d : PREVIOUS;

SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};

float minx <string uiname = "Min_X";>;
float maxx <string uiname = "Max_X";>;

float minz <string uiname = "Min_Z";>;
float maxz <string uiname = "Max_Z";>;

float ty <string uiname = "Target_Y";>;
float hy <string uiname = "Y_Range";>;


struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};


float4 PS(psInput input) : SV_Target
{
	float4 c = texture2d.Sample(linearSampler,input.uv);
	if(minx < c.x && c.x < maxx
	    && minz < c.z && c.z < maxz 
	      && c.y > ty && (ty + hy) > c.y){
		return c;
	}
	return 0;
}

technique10 Process
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}



